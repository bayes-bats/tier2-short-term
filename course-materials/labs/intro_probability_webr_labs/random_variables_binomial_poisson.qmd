---
title: "Random Variables - Binomial, Hypergeometric, and Poisson"
format: html
engine: knitr
webr:
  channel-type: "automatic"
filters:
  - webr
---

# Code Examples

Web-r to accompany examples in [Stat20 Random Variable Notes](https://www.stat20.org/3-probability/04-random-variables/notes).


## Bernoulli$(p)$ and Binomial$(n,p)$

1.  `dbinom` computes the pmf of $X$, $f(k) = P(X = k)$, for $k = 0, 1, \ldots, n$.

-   Arguments:
    -   `x`: the value of $k$ in $f(k)$
    -   `size`: the parameter $n$, the number of trials
    -   `prob`: the parameter $p$, the probability of success

2.  `pbinom` computes the cdf $F(x) = P(X \le x)$\

-   Arguments:
    -   `q`: the value of $x$ in $F(x)$
    -   `size`: the parameter $n$, the number of trials
    -   `prob`: the parameter $p$, the probability of success

3.  `rbinom` generates a sample (random numbers) from the Binomial$(n,p)$ distribution.

-   Arguments:
    -   `n`: the sample size
    -   `size`: the parameter $n$, the number of trials
    -   `prob`: the parameter $p$, the probability of success

## Example

Suppose we consider $n = 3$, $p= 0.5$, that is, $X$ is the number of successes in 3 independent Bernoulli trials.

1. What is the probability that we see exactly 1 success = $f(1)$

```{webr}
dbinom(x = 1, size = 3, prob = 0.5)
```

2. What is the probability that we see *at most* 1 success = $F(1) = f(0) + f(1)$

```{webr}
# Calculate F(1) using the cumulative distribution function
pbinom(q = 1, size = 3, prob = 0.5 )
```

Let's double check that this is true: $F(1) = f(0) + f(1)$

```{webr}
# Check f(0) + f(1)

dbinom(x = 0, size = 3, prob = 0.5) + dbinom(x = 1, size = 3, prob = 0.5)
```

3. Generate a sample of size 5 where each element in the sample represents the number of successes in 3 trials (like the number of heads in 3 tosses)

```{webr}

rbinom(n = 5, size = 3, prob = 0.5)
```

4. Let's generate a sample of size 10 to simulate 10 tosses of a single fair coin

```{webr}
rbinom(n = 10, size = 1, prob = 0.5)

```

5. If we have a Binomial distribution that can be described as $X \sim Bin(10, 0.4)$ compute the following

-  $X = 5$

We can calculate $X = 5$ one of two ways:

Using `dbinom` to calculate the pmf for $X = 5$

```{webr}
# P(X = 5)
dbinom(x = 5, size = 10, prob = 0.4)
```

Using `pbinom` to calculate the cdf for $X \le 5$ and subtracting the cdf for $X \le 4$ to get the pmf of $X = 5$.

```{webr}
# P(X = 5)
pbinom(5, 10, 0.4) - pbinom(4, 10, 0.4)
```

-   $X \le 5$

Can also be calculated two ways. 

We can compute this by adding up the pmfs of $X = 0$, $X = 1$, $X = 2$, $X = 3$, $X = 4$, $X = 5$

```{webr}
# P(X <= 5)
dbinom(x = 0, size = 10, prob = 0.4) + dbinom(x = 1, size = 10, prob = 0.4) + 
  dbinom(x = 2, size = 10, prob = 0.4) + dbinom(x = 3, size = 10, prob = 0.4) +
  dbinom(x = 4, size = 10, prob = 0.4) + dbinom(x = 5, size = 10, prob = 0.4)
```

Or we can calculate the cdf:

```{webr}
# P(X <= 5)
pbinom(5, 10, 0.4)
```

-   $3 \le X \le 8$

Can be calculated by adding up the pmfs of $X = 3$, $X = 4$, $X = 5$, $X = 6$, $X = 7$, and $X = 8$.    

```{webr}
# P(3 <= X <= 8)
dbinom(x = 3, size = 10, prob = 0.4) + 
  dbinom(x = 4, size = 10, prob = 0.4) + 
  dbinom(x = 5, size = 10, prob = 0.4) + 
  dbinom(x = 6, size = 10, prob = 0.4) +
  dbinom(x = 7, size = 10, prob = 0.4) + 
  dbinom(x = 8, size = 10, prob = 0.4)
```

Or by calculating the cdf of $X \le 8$ and subtracting the cdf of $X \le 2$

```{webr}
# P(3 >= X <= 8)
pbinom(8, 10, 0.4) - pbinom(2, 10, 0.4)
```



### Exercise:

Suppose our process is $X \sim Bin(20, 0.2)$. **Fill in the blanks below** to compute the following:

-   $X = 4$

Hint: Your answer should come out to be 0.2181994

```{webr}
# P(X = 4)
____binom(x = ___, size = 20, prob = _____)
```


-   $X \le 4$

Hint: Your answer should come out to be 0.6296483

```{webr}
# P(X <= 4)
___binom(___ = 4, size = ___, prob = 0.2)
```

-   $7 \le X \le 10$

Hint: Your answer should come out to be 0.0861291. Use the help file to check the formulas used and be careful with the less than or equal to signs.

```{webr}
# P(7 <= X <= 10)
___binom(___ = ___, size = 20, prob = 0.2) - ___binom(___ = ___, size = 20, prob = 0.2)
```


### Hypergeometric $(N, G, n)$

The notation is a bit confusing, but just remember that `x` is usually the number $k$ that you want the probability for, and `m + n`$=N$ is the total number of successes and failures, or the population size.

1.  `dhyper` computes the pmf of $X$, $f(k) = P(X = k)$, for $k = 0, 1, \ldots, n$.

-   Arguments:
    -   `x`: the value of $k$ in $f(k)$
    -   `m`: the parameter $G$, the number of successes in the population
    -   `n`: the value $N-G$, the number of failures in the population
    -   `k`: the sample size (number of draws $n$, note that $0 \le k \le m+n$)

2.  `phyper` computes the cdf $F(x) = P(X \le x)$\

-   Arguments:
    -   `q`: the value of $x$ in $F(x)$
    -   `m`: the parameter $G$, the number of successes in the population
    -   `n`: the value $N-G$, the number of failures in the population
    -   `k`: the sample size (number of draws $n$)

3.  `rhyper` generates a sample (random numbers) from the hypergeometric$(N, G, n)$ distribution.

-   Arguments:
    -   `nn`: the number of random numbers desired
    -   `m`: the parameter $G$, the number of successes in the population
    -   `n`: the value $N-G$, the number of failures in the population
    -   `k`: the sample size (number of draws $n$)

#### Example

Suppose we consider $N = 10, G  = 6, n = 3$, that is, $X$ is the number of successes in 3 draws without replacement from a box that has 6 tickets marked $\fbox{1}$ and 4 tickets marked $\fbox{0}$

1. The probability that we see exactly 1 success = $f(1)$

```{webr}
dhyper(x = 1, m = 6, n = 4, k = 3)
```

Try computing this by hand as well to check.

2. The probability that we see *at most* 1 success = $F(1) = f(0) + f(1)$

Using the cdf:

```{webr}
phyper(q = 1, m = 6, n = 4, k = 3)
```

Adding up the pmfs:

```{webr}
# check f(0) + f(1)
dhyper(x = 0, m = 6, n = 4, k = 3) + dhyper(x = 1, m = 6, n = 4, k = 3)
```

3. Generate a sample of size 5 where each element in the sample represents the number of successes in 3 draws.

```{webr}
rhyper(nn = 5, m = 6, n = 4, k = 3)
```

### Poisson($\lambda$)

1.  `dpois` computes the pmf of $X$, $f(k) = P(X = k)$, for $k = 0, 1, 2,  \ldots$.

-   Arguments:
    -   `x`: the value of $k$ in $f(k)$
    -   `lambda`: the parameter $\lambda$

2.  `ppois` computes the cdf $F(x) = P(X \le x)$\

-   Arguments:
    -   `q`: the value of $x$ in $F(x)$
    -   `lambda`: the parameter $\lambda$

3.  `rpois` generates a sample (random numbers) from the Poisson($\lambda$) distribution.

-   Arguments:
    -   `n`: the desired sample size
    -   `lambda`: the parameter $\lambda$

#### Example

Suppose we consider $\lambda = 1$, that is $X \sim$ Poisson$(\lambda)$.

1. What is the probability that we see exactly 1 event $f(1)$

```{webr}
dpois(x = 1, lambda = 1)
```

2. Let's check that $f(1) = exp(-\lambda)\lambda = exp(-1)1$

```{webr}
#check f(1) = exp(-lambda)*lambda = exp(-1)*1
exp(-1)
```

3. What is the probability that we see *at most* 1 success, $F(1) = f(0) + f(1)$

Using the cdf:

```{webr}
ppois(q = 1,lambda = 1)
```

Adding up the pmfs

```{webr}
# check f(0) + f(1)
dpois(x = 0, lambda = 1) + dpois(x = 1, lambda = 1)
```

4. Generate a sample of size 5 where each element in the sample represents a random count from the Poisson(1) distribution

```{webr}
rpois(n = 5, lambda = 1)

```
